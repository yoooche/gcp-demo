name: GCP deploy demo

on:
  push:
    branches: [ release ]
  pull_request:
    branches: [ release ]
    types: [ closed ]
    
jobs:
  deploy:
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Setup Google Cloud CLI
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Artifact Registry
        uses: google-github-actions/setup-gcloud@v1
        with:
          install_components: 'docker-credential-gcr'

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/springboot-app:${{ github.sha }} .

      - name: Push Docker image to Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/springboot-app:${{ github.sha }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Import existing resources
        run: |
          cd terraform
          terraform import google_compute_network.vpc_network projects/${{ secrets.GCP_PROJECT_ID }}/global/networks/springboot-vpc || true
          terraform import google_compute_subnetwork.subnet projects/${{ secrets.GCP_PROJECT_ID }}/regions/${{ secrets.GCP_REGION }}/subnetworks/springboot-subnet || true
          terraform import google_compute_firewall.allow_http projects/${{ secrets.GCP_PROJECT_ID }}/global/firewalls/allow-http || true
          terraform import google_vpc_access_connector.connector projects/${{ secrets.GCP_PROJECT_ID }}/regions/${{ secrets.GCP_REGION }}/vpcAccessConnectors/vpc-connector || true
          terraform import google_cloud_run_service.springboot_app projects/${{ secrets.GCP_PROJECT_ID }}/locations/${{ secrets.GCP_REGION }}/services/springboot-app || true
          terraform import google_cloud_run_service_iam_member.public_access projects/${{ secrets.GCP_PROJECT_ID }}/locations/${{ secrets.GCP_REGION }}/services/springboot-app/roles/run.invoker/allUsers || true

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=${{ secrets.GCP_REGION }}" -var="image_url=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/springboot-app:${{ github.sha }}"

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=${{ secrets.GCP_REGION }}" -var="image_url=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/springboot-app:${{ github.sha }}"
